import { useEffect, useState } from "react";
import { getTopHeadlines } from "./api/newsApi";
import { useDebounce } from './hooks/useDebounce';


// –¢–∏–ø —Å—Ç–∞—Ç—å–∏ ‚Äî —á—Ç–æ–±—ã —É–¥–æ–±–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
type Article = {
  title: string;
  description: string;
  url: string;
  urlToImage: string;
};

function App() {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–ø–∏—Å–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
  const [articles, setArticles] = useState<Article[]>([]);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è "–ó–∞–≥—Ä—É–∑–∫–∞..."
  const [isLoading, setIsLoading] = useState<boolean>(true);
  const [country, setCountry] = useState("us");
  const [searchQuery, setSearchQuery] = useState("");
  const debouncedSearchQuery = useDebounce(searchQuery, 500);

  useEffect(() => {
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π
    const fetchNews = async () => {
      setIsLoading(true); // —Å–ø–∏–Ω–Ω–µ—Ä
      const data = await getTopHeadlines(country); // –Ω–æ–≤–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ API
      setArticles(data); // —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      setIsLoading(false); // —Å–Ω–∏–º–∞—Ç—å "–∑–∞–≥—Ä—É–∑–∫–∞"
    };

    fetchNews();
  }, [country]); // –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω—ã
  // useEffect —Å –ø—É—Å—Ç—ã–º –º–∞—Å—Å–∏–≤–æ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π [] ‚Äî –≤—ã–∑–æ–≤–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

  const filteredArticles = articles.filter((article) =>
    article.title.toLowerCase().includes(debouncedSearchQuery.toLowerCase())
  );  

  return (
    <div style={{ padding: "2rem", fontFamily: "sans-serif" }}>
      <select value={country} onChange={(e) => setCountry(e.target.value)}>
        <option value="us">üá∫üá∏ –°–®–ê</option>
        <option value="ru">üá∑üá∫ –†–æ—Å—Å–∏—è</option>
        <option value="de">üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è</option>
        <option value="fr">üá´üá∑ –§—Ä–∞–Ω—Ü–∏—è</option>
      </select>
  
      <input
        type="text"
        placeholder="–ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π..."
        value={searchQuery}
        onChange={(e) => setSearchQuery(e.target.value)}
        style={{
          padding: "0.5rem 1rem",
          borderRadius: "5px",
          border: "1px solid #ccc",
          marginBottom: "1rem",
          width: "100%",
          maxWidth: "400px",
        }}
      />
  
      <h1>–ù–æ–≤–æ—Å—Ç–∏</h1>
  
      {isLoading ? (
        <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : (
        <div
          style={{
            display: "grid",
            gap: "1.5rem",
            gridTemplateColumns: "repeat(auto-fit, minmax(300px, 1fr))",
          }}
        >
          {filteredArticles.length === 0 ? (
            <p style={{ color: "gray" }}>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É.</p>
          ) : (
            filteredArticles.map((article, index) => (
              <div
                key={index}
                style={{
                  border: "1px solid #ccc",
                  borderRadius: "10px",
                  padding: "1rem",
                  backgroundColor: "#1e1e1e",
                  color: "#fff",
                }}
              >
                <h2>{article.title}</h2>
                {article.urlToImage && (
                  <img
                    src={article.urlToImage}
                    alt="image"
                    style={{ maxWidth: "100%", borderRadius: "8px" }}
                  />
                )}
                <p>{article.description}</p>
                <a
                  href={article.url}
                  target="_blank"
                  rel="noopener noreferrer"
                  style={{ color: "lightblue" }}
                >
                  –ß–∏—Ç–∞—Ç—å
                </a>
              </div>
            ))
          )}
        </div>
      )}
    </div>
  );
}

export default App;
