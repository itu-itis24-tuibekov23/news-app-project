// –ò–º–ø–æ—Ä—Ç —Ö—É–∫–æ–≤ React –∏ —Ñ—É–Ω–∫—Ü–∏–∏ API
import { useEffect, useState } from 'react';
import { getTopHeadlines } from './api/newsApi';

// –¢–∏–ø –¥–ª—è –æ–¥–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏
type Article = {
  title: string;
  description: string;
  url: string;
  urlToImage: string;
};

function App() {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–ø–∏—Å–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
  const [articles, setArticles] = useState<Article[]>([]);
  const [isLoading, setIsLoading] = useState<boolean>(true); 

  useEffect(() => {
    // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
    const fetchNews = async () => {
      setIsLoading(true); // üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä
      const data = await getTopHeadlines();
      setArticles(data); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      setIsLoading(false);
    };

    fetchNews();
  }, []);

  return (
    <div>
      <h1>–ù–æ–≤–æ—Å—Ç–∏</h1>
      {isLoading ? (
        <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p> // ‚è≥ –ø–æ–∫–∞ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–∏—à–ª–∏
      ) : (
        <ul>
          {articles.map((article, index) => (
            <li key={index}>
              <a href={article.url} target="_blank">{article.title}</a>
            </li>
          ))}
        </ul>
      )}
    </div>
  );
}

export default App;
